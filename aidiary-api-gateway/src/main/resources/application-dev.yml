server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      default-zone: http://127.0.0.1:8761/eureka

spring:
  application:
    name: aidiary-api-gateway
  main:
    allow-bean-definition-overriding: true
    web-application-type: reactive
  cloud:
    gateway:
      allowed-uri:
        server:
          permitted-all:
            any:
              /api/v1/users/duplicate,
              /api/v1/users/email/auth-code,
              /api/v1/users/email/auth,
              /api/v1/users/login
            post:
              /api/v1/users
          authenticated:
            /api/v1/users/me,
            /api/v1/users/nickname,
            /api/v1/users/password,
            /api/v1/users/logout,
            /api/v1/diaries/**
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - 'http://localhost:5173'
              - 'https://ai-diary-knou-front.vercel.app'
            allow-credentials: true
            allowedHeaders: '*'
            allowedMethods:
              - PUT
              - PATCH
              - GET
              - POST
              - DELETE
              - OPTIONS
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
        - id: user-service
          uri: http://localhost:8080
          predicates:
            - Path=/api/v1/users/**
        - id: diary-service
          uri: http://localhost:8082
          predicates:
            - Path=/api/v1/diaries/**
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://ai-diary-mysql.mysql.database.azure.com:3306/aidiary
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
        dialect: org.hibernate.dialect.MySQLDialect
    open-in-view: false
  encryptor:
    seed-key: ${SEED_KEY}
  jwt:
    secret-key: ${JWT_KEY}
    expire-time: 10800000 # 3 x 60 x 60 x 1000